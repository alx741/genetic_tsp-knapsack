{-# LANGUAGE TypeSynonymInstances #-}
{-# LANGUAGE FlexibleInstances #-}

module Tsp where

import Genetic
import Control.Monad.Random
import Data.List (nub, elemIndex)
import Data.Maybe (fromMaybe)
import qualified Data.Vector as V
import qualified Data.Map as M

newtype City = City Int deriving (Show, Eq, Ord)

instance Gene City where
    fitness = tspFitness
    isValid _ = True
    mutate = tspMutate
    crossover = erx
    rndGenome = tspRndSol

tspProblem :: GeneticProblem City
tspProblem = GeneticProblem Minimize 1

tspFitness :: Genome City -> Float
tspFitness genome = roundTrip + (pathValue $ V.toList genome)
    where roundTrip = distance (V.last genome) (V.head genome)

pathValue :: [City] -> Float
pathValue [] = 0
-- pathValue [c1, c2] = distance c1 c2
pathValue [c] = 0
pathValue (c1:c2:cs) = distance c1 c2 + pathValue cs

tspMutate :: (RandomGen g) => Genome City -> Rand g (Genome City)
tspMutate genome = do
    rndCity1 <- getRandomR (0, (V.length genome) - 1)
    rndCity2 <- getRandomR (0, (V.length genome) - 1)
    let city1 = genome V.! rndCity1
    let city2 = genome V.! rndCity2
    return $ genome V.// [(rndCity1, city2),  (rndCity2, city1)]

tspMutateN :: (RandomGen g) => Int -> Genome City -> Rand g (Genome City)
tspMutateN 0 genome = return genome
tspMutateN n genome = tspMutate genome >>= tspMutateN (n-1)

tspRndSol :: (RandomGen g) => Rand g (Genome City)
tspRndSol = tspMutateN n $ V.fromList $ fmap City [0..n]
    where n = (V.length cities2 - 1)

erx :: (RandomGen g) => Genome City -> Genome City -> Rand g (Genome City)
erx g1 g2 = return $ V.fromList $ (fst $ head em) : (fst $ last em) : (tail $ init $ fmap fst em)
    where
        em = edgeMap (V.toList g1) (V.toList g2)
        minLen a = minimum $ fmap length $ fmap snd a

edgeMap cs1 cs2 = zip cs1 $ fmap (\c -> adjacents c cs1 cs2) cs1

adjacents :: City -> [City] -> [City] -> [City]
adjacents city cs1 cs2 = nub $ adjacents' city cs1 ++ adjacents' city cs2

adjacents' :: City -> [City] -> [City]
adjacents' city cities = filter (isNextTo i) cities
    where
        i = fromMaybe 0 $ elemIndex city cities
        lastIndex = (length cities) - 1
        isNextTo i c
            | i == 0 = cities !! (i+1) == c  || cities !! lastIndex == c
            | i == lastIndex = cities !! (i-1) == c  || cities !! 0 == c
            | otherwise = cities !! (i+1) == c || cities !! (i-1) == c


distance :: City -> City -> Float
distance (City c1) (City c2)
    | c1 == c2 = 0
    | otherwise = (cities V.! c1) V.! c2



-- Cities = 15
cities :: V.Vector (V.Vector Float)
cities = V.fromList
    [ V.fromList [ 0, 29, 82, 46, 68, 52, 72, 42, 51, 55, 29, 74, 23, 72, 46]
    , V.fromList [29,  0, 55, 46, 42, 43, 43, 23, 23, 31, 41, 51, 11, 52, 21]
    , V.fromList [82, 55,  0, 68, 46, 55, 23, 43, 41, 29, 79, 21, 64, 31, 51]
    , V.fromList [46, 46, 68,  0, 82, 15, 72, 31, 62, 42, 21, 51, 51, 43, 64]
    , V.fromList [68, 42, 46, 82,  0, 74, 23, 52, 21, 46, 82, 58, 46, 65, 23]
    , V.fromList [52, 43, 55, 15, 74,  0, 61, 23, 55, 31, 33, 37, 51, 29, 59]
    , V.fromList [72, 43, 23, 72, 23, 61,  0, 42, 23, 31, 77, 37, 51, 46, 33]
    , V.fromList [42, 23, 43, 31, 52, 23, 42,  0, 33, 15, 37, 33, 33, 31, 37]
    , V.fromList [51, 23, 41, 62, 21, 55, 23, 33,  0, 29, 62, 46, 29, 51, 11]
    , V.fromList [55, 31, 29, 42, 46, 31, 31, 15, 29,  0, 51, 21, 41, 23, 37]
    , V.fromList [29, 41, 79, 21, 82, 33, 77, 37, 62, 51,  0, 65, 42, 59, 61]
    , V.fromList [74, 51, 21, 51, 58, 37, 37, 33, 46, 21, 65,  0, 61, 11, 55]
    , V.fromList [23, 11, 64, 51, 46, 51, 51, 33, 29, 41, 42, 61,  0, 62, 23]
    , V.fromList [72, 52, 31, 43, 65, 29, 46, 31, 51, 23, 59, 11, 62,  0, 59]
    , V.fromList [46, 21, 51, 64, 23, 59, 33, 37, 11, 37, 61, 55, 23, 59,  0]
    ]



-- Cities = 48
cities2 :: V.Vector (V.Vector Float)
cities2 = V.fromList
    [ V.fromList [0, 4727, 1205, 6363, 3657, 3130, 2414, 563, 463, 5654, 1713, 1604, 2368, 2201, 1290, 1004, 3833, 2258, 3419, 2267, 720, 1700, 5279, 578, 076, 465, 654, 625, 115, 574, 951, 748, 142, 755, 383, 306, 029, 530, 25, 188, 820, 489, 947, 835, 542, 379, 744]
    , V.fromList [4727, 0, 3588, 2012, 1842, 6977, 6501, 5187, 5028, 2327, 4148, 4723, 3635, 3125, 4907, 3930, 7463, 6338, 7243, 5105, 4043, 4022, 3677, 863, 106, 850, 173, 630, 204, 814, 001, 447, 253, 656, 123, 274, 183, 622, 085, 564, 756, 591, 027, 186, 472, 461, 390, 088]
    , V.fromList [1205, 3588, 0, 5163, 2458, 3678, 3071, 1742, 1444, 4462, 1184, 1520, 1498, 1103, 1501, 951, 4298, 2903, 3967, 2169, 2209, 652, 828, 136, 518, 873, 954, 254, 446, 581, 441, 960, 966, 50, 564, 916, 878, 035, 482, 027, 395, 617, 891, 686, 661, 023, 867, 560]
    , V.fromList [6363, 2012, 5163, 0, 2799, 8064, 7727, 6878, 6581, 1402, 5366, 5946, 4679, 4378, 6225, 5709, 8417, 7578, 8296, 6135, 4802, 5707, 4982, 322, 178, 20, 186, 800, 778, 859, 408, 763, 461, 223, 427, 451, 263, 131, 669, 011, 638, 681, 987, 502, 877, 758, 360, 844]
    , V.fromList [3657, 1842, 2458, 2799, 0, 5330, 4946, 4200, 3824, 2012, 2573, 3157, 1924, 1580, 3427, 3179, 5749, 4793, 5577, 3409, 2223, 3066, 2185, 860, 401, 491, 486, 035, 94, 141, 611, 669, 677, 590, 113, 682, 533, 352, 252, 227, 426, 169, 313, 706, 241, 962, 651, 04]
    , V.fromList [3130, 6977, 3678, 8064, 5330, 0, 743, 3209, 2670, 6929, 2831, 2266, 3407, 3854, 2178, 4076, 727, 881, 293, 1930, 3310, 3672, 3315, 6199, 932, 745, 65, 82, 774, 61, 659, 513, 746, 431, 910, 69, 07, 225, 435, 681, 053, 384, 50, 224, 805, 670, 704, 230]
    , V.fromList [2414, 6501, 3071, 7727, 4946, 743, 0, 2468, 1952, 6673, 2380, 1795, 3051, 3405, 1604, 3382, 1469, 168, 1020, 1681, 3110, 2993, 2827, 009, 552, 412, 104, 67, 300, 21, 16, 348, 270, 890, 698, 32, 00, 484, 185, 049, 415, 051, 219, 82, 635, 054, 432, 884]
    , V.fromList [563, 5187, 1742, 6878, 4200, 3209, 2468, 0, 718, 6203, 2241, 2051, 2920, 2762, 1687, 1304, 3932, 2331, 3487, 2669, 3487, 1175, 2260, 840, 141, 596, 563, 728, 120, 240, 559, 507, 082, 658, 304, 512, 364, 85, 091, 319, 544, 358, 632, 987, 391, 785, 879, 296]
    , V.fromList [463, 5028, 1444, 6581, 3824, 2670, 1952, 718, 0, 5789, 1602, 1343, 2330, 2291, 970, 1451, 3376, 1796, 2959, 1951, 2835, 1112, 1725, 346, 628, 285, 007, 193, 889, 661, 122, 920, 372, 391, 883, 927, 845, 11, 543, 76, 590, 993, 039, 486, 934, 112, 196, 876]
    , V.fromList [5654, 2327, 4462, 1402, 2012, 6929, 6673, 6203, 5789, 0, 4392, 4947, 3648, 3501, 5274, 5183, 7216, 6535, 7140, 5022, 3621, 5077, 4090, 22, 207, 131, 014, 714, 437, 707, 477, 476, 432, 599, 102, 376, 121, 284, 497, 160, 318, 37, 795, 507, 268, 773, 249, 914]
    , V.fromList [1713, 4148, 1184, 5366, 2573, 2831, 2380, 2241, 1602, 4392, 0, 586, 766, 1029, 883, 2040, 3353, 2224, 3100, 1049, 1246, 1625, 503, 3841, 196, 054, 042, 488, 945, 676, 087, 331, 114, 650, 459, 132, 037, 958, 997, 31, 513, 701, 923, 137, 459, 394, 11, 534]
    , V.fromList [1604, 4723, 1520, 5946, 3157, 2266, 1795, 2051, 1343, 4947, 586, 0, 1299, 1612, 406, 2208, 2824, 1639, 2542, 694, 1586, 1767, 1050, 357, 770, 633, 498, 907, 520, 128, 558, 778, 31, 171, 003, 552, 472, 538, 506, 91, 912, 277, 403, 564, 983, 27, 92, 109]
    , V.fromList [2368, 3635, 1498, 4679, 1924, 3407, 3051, 2920, 2330, 3648, 766, 1299, 0, 646, 1642, 2446, 3840, 2905, 3655, 1488, 730, 2096, 697, 3076, 33, 363, 567, 122, 453, 219, 842, 592, 791, 480, 706, 772, 610, 721, 232, 656, 550, 001, 403, 860, 697, 126, 56, 836]
    , V.fromList [2201, 3125, 1103, 4378, 1580, 3854, 3405, 2762, 2291, 3501, 1029, 1612, 646, 0, 1853, 2026, 4349, 3247, 4119, 1997, 1341, 1753, 606, 078, 19, 070, 052, 517, 923, 690, 032, 866, 142, 38, 593, 161, 060, 788, 380, 663, 932, 736, 915, 138, 647, 395, 351, 592]
    , V.fromList [1290, 4907, 1501, 6225, 3427, 2178, 1604, 1687, 970, 5274, 883, 406, 1642, 1853, 0, 2029, 2803, 1438, 2466, 986, 1987, 1593, 1253, 4716, 072, 915, 454, 764, 710, 082, 204, 164, 97, 287, 342, 419, 379, 134, 867, 54, 885, 569, 405, 289, 338, 55, 297, 406]
    , V.fromList [1004, 3930, 951, 5709, 3179, 4076, 3382, 1304, 1451, 5183, 2040, 2208, 2446, 2026, 2029, 0, 4759, 3220, 4368, 2900, 3151, 442, 1765, 960, 444, 443, 396, 610, 932, 034, 572, 891, 525, 590, 278, 313, 261, 033, 398, 476, 241, 287, 390, 928, 419, 428, 749, 337]
    , V.fromList [3833, 7463, 4298, 8417, 5749, 727, 1469, 3932, 3376, 7216, 3353, 2824, 3840, 4349, 2803, 4759, 0, 1601, 477, 2359, 3617, 4345, 3851, 433, 372, 098, 70, 206, 267, 26, 384, 754, 335, 991, 148, 452, 09, 949, 752, 331, 687, 746, 37, 948, 005, 334, 098, 618]
    , V.fromList [2258, 6338, 2903, 7578, 4793, 881, 168, 2331, 1796, 6535, 2224, 1639, 2905, 3247, 1438, 3220, 1601, 0, 1165, 1563, 2988, 2829, 2666, 882, 401, 263, 233, 99, 138, 23, 94, 227, 117, 724, 565, 86, 049, 348, 051, 881, 248, 903, 322, 55, 508, 87, 302, 736]
    , V.fromList [3419, 7243, 3967, 8296, 5577, 293, 1020, 3487, 2959, 7140, 3100, 2542, 3655, 4119, 2466, 4368, 477, 1165, 0, 2170, 3520, 3965, 3588, 393, 183, 977, 02, 67, 041, 38, 932, 706, 027, 711, 107, 061, 32, 503, 652, 972, 344, 617, 86, 501, 989, 962, 939, 469]
    , V.fromList [2267, 5105, 2169, 6135, 3409, 1930, 1681, 2669, 1951, 5022, 1049, 694, 1488, 1997, 986, 2900, 2359, 1563, 2170, 0, 1430, 2460, 1547, 333, 019, 817, 079, 694, 910, 733, 813, 668, 54, 694, 029, 366, 130, 991, 525, 474, 542, 455, 923, 641, 957, 071, 77, 302]
    , V.fromList [2957, 4043, 2209, 4802, 2223, 3310, 3110, 3487, 2835, 3621, 1246, 1586, 730, 1341, 1987, 3151, 3617, 2988, 3520, 1430, 0, 2779, 1387, 905, 062, 482, 398, 119, 922, 087, 115, 240, 953, 175, 607, 796, 501, 119, 136, 173, 268, 136, 189, 029, 527, 355, 11, 042]
    , V.fromList [720, 4022, 652, 5707, 3066, 3672, 2993, 1175, 1112, 5077, 1625, 1767, 2096, 1753, 1593, 442, 4345, 2829, 3965, 2460, 2779, 0, 1401, 781, 166, 427, 984, 212, 946, 620, 224, 603, 089, 496, 178, 906, 861, 719, 132, 040, 479, 211, 969, 553, 290, 012, 336, 189]
    , V.fromList [1700, 3677, 828, 4982, 2185, 3315, 2827, 2260, 1725, 4090, 503, 1050, 697, 606, 1253, 1765, 3851, 2666, 3588, 1547, 1387, 1401, 0, 3621, 03, 675, 537, 954, 475, 169, 427, 254, 578, 148, 177, 598, 521, 194, 833, 074, 054, 340, 423, 541, 213, 801, 077, 190]
    , V.fromList [5279, 2863, 4136, 2322, 1860, 6199, 6009, 5840, 5346, 922, 3841, 4357, 3076, 3078, 4716, 4960, 6433, 5882, 6393, 4333, 2905, 4781, 3621, 718, 042, 254, 024, 569, 966, 913, 687, 807, 384, 716, 699, 384, 787, 852, 687, 285, 272, 022, 892, 629, 178, 581, 639]
    , V.fromList [2578, 3106, 1518, 4178, 1401, 3932, 3552, 3141, 2628, 3207, 1196, 1770, 533, 419, 2072, 2444, 4372, 3401, 4183, 2019, 1062, 2166, 903, 718, 864, 097, 635, 932, 748, 274, 448, 284, 164, 286, 283, 136, 086, 67, 973, 285, 507, 935, 331, 312, 589, 284, 340]
    , V.fromList [6076, 1850, 4873, 320, 2491, 7745, 7412, 6596, 6285, 1131, 5054, 5633, 4363, 4070, 5915, 5443, 8098, 7263, 7977, 5817, 4482, 5427, 4675, 042, 864, 866, 483, 515, 539, 101, 449, 146, 938, 375, 134, 944, 831, 349, 709, 397, 363, 667, 190, 798, 446, 041, 528]
    , V.fromList [3465, 7173, 3954, 8186, 5486, 365, 1104, 3563, 3007, 7014, 3042, 2498, 3567, 4052, 2454, 4396, 370, 1233, 202, 2079, 3398, 3984, 3537, 254, 097, 866, 39, 973, 74, 019, 569, 996, 669, 970, 085, 05, 581, 532, 976, 339, 509, 87, 581, 844, 974, 838, 369]
    , V.fromList [2654, 6630, 3254, 7800, 5035, 482, 267, 2728, 2193, 6714, 2488, 1907, 3122, 3517, 1764, 3610, 1206, 399, 767, 1694, 3119, 3212, 2954, 024, 635, 483, 39, 427, 58, 181, 349, 377, 044, 723, 56, 53, 744, 218, 241, 614, 121, 55, 43, 644, 231, 465, 957]
    , V.fromList [3625, 1204, 2446, 2778, 894, 5774, 5300, 4120, 3889, 2437, 2945, 3520, 2453, 1923, 3710, 2932, 6267, 5138, 6041, 3910, 2922, 2946, 2475, 569, 932, 515, 973, 427, 612, 824, 550, 050, 498, 476, 071, 980, 470, 096, 388, 911, 501, 831, 994, 704, 264, 209, 196]
    , V.fromList [3115, 6814, 3581, 7859, 5141, 261, 821, 3240, 2661, 6707, 2676, 2128, 3219, 3690, 2082, 4034, 726, 923, 438, 1733, 3087, 3620, 3169, 966, 748, 539, 74, 58, 612, 716, 280, 624, 298, 679, 35, 20, 263, 216, 606, 967, 179, 00, 277, 567, 609, 501, 032]
    , V.fromList [1574, 6001, 2441, 7408, 4611, 1659, 916, 1559, 1122, 6477, 2087, 1558, 2842, 3032, 1204, 2572, 2384, 794, 1932, 1813, 3115, 2224, 2427, 913, 274, 101, 019, 181, 824, 716, 330, 180, 346, 545, 023, 808, 78, 062, 438, 693, 763, 115, 40, 537, 63, 404, 603]
    , V.fromList [3951, 3447, 2960, 3763, 1669, 4513, 4348, 4507, 3920, 2476, 2331, 2778, 1592, 1866, 3164, 3891, 4754, 4227, 4706, 2668, 1240, 3603, 254, 687, 448, 449, 569, 349, 550, 280, 330, 184, 510, 402, 031, 698, 281, 33, 245, 612, 187, 339, 265, 296, 576, 941, 381]
    , V.fromList [1748, 5253, 1966, 6461, 3677, 1746, 1270, 2082, 1372, 5432, 1114, 531, 1791, 2142, 497, 2525, 2335, 1117, 2027, 654, 1953, 2089, 1578, 807, 284, 146, 996, 377, 050, 624, 180, 184, 685, 475, 022, 952, 341, 963, 050, 358, 787, 926, 086, 436, 22, 244, 619]
    , V.fromList [2142, 2656, 950, 4223, 1590, 4431, 3890, 2658, 2391, 3599, 1650, 2171, 1480, 838, 2287, 1590, 4991, 3724, 4711, 2694, 2175, 1496, 1148, 384, 164, 938, 669, 044, 498, 298, 346, 510, 685, 697, 693, 636, 975, 981, 909, 124, 718, 565, 548, 830, 839, 140, 751]
    , V.fromList [6755, 3123, 5564, 1427, 3113, 7910, 7698, 7304, 6883, 1102, 5459, 6003, 4706, 4593, 6342, 6278, 8148, 7565, 8107, 6029, 4607, 6178, 177, 716, 286, 375, 970, 723, 476, 679, 545, 402, 475, 697, 393, 097, 370, 515, 249, 379, 001, 738, 556, 61, 829, 267, 013]
    , V.fromList [2383, 6274, 2916, 7451, 4682, 769, 332, 2512, 1927, 6376, 2132, 1552, 2772, 3161, 1419, 3313, 1452, 286, 1061, 1366, 2796, 2906, 2598, 699, 283, 134, 085, 56, 071, 35, 023, 031, 022, 693, 393, 65, 542, 883, 913, 286, 772, 121, 00, 322, 02, 128, 608]
    , V.fromList [3306, 7183, 3878, 8263, 5533, 207, 900, 3364, 2845, 7121, 3037, 2472, 3610, 4060, 2379, 4261, 609, 1049, 132, 2130, 3501, 3861, 3521, 384, 136, 944, 05, 53, 980, 20, 808, 698, 952, 636, 097, 65, 380, 629, 877, 250, 583, 70, 380, 986, 866, 904, 432]
    , V.fromList [1029, 5622, 2035, 7131, 4352, 2225, 1484, 985, 611, 6284, 1958, 1538, 2721, 2788, 1134, 2033, 2949, 1348, 2503, 1991, 3119, 1719, 2194, 787, 086, 831, 581, 744, 470, 263, 78, 281, 341, 975, 370, 542, 380, 952, 127, 197, 518, 658, 002, 395, 51, 429, 380]
    , V.fromList [3530, 3085, 2482, 3669, 1252, 4435, 4185, 4091, 3543, 2497, 1997, 2506, 1232, 1380, 2867, 3398, 4752, 4051, 4652, 2525, 1136, 3132, 833, 852, 67, 349, 532, 218, 096, 216, 062, 33, 963, 981, 515, 883, 629, 952, 873, 080, 012, 324, 046, 478, 328, 755, 000]
    , V.fromList [825, 4564, 1027, 6011, 3227, 2681, 2049, 1319, 676, 5160, 931, 791, 1656, 1663, 554, 1476, 3331, 1881, 2972, 1474, 2173, 1040, 1074, 687, 973, 709, 976, 241, 388, 606, 438, 245, 050, 909, 249, 913, 877, 127, 873, 374, 392, 943, 659, 285, 012, 563, 254]
    , V.fromList [2188, 2756, 1395, 4638, 2426, 5053, 4415, 2544, 2590, 4318, 2513, 2912, 2550, 1932, 2885, 1241, 5687, 4248, 5344, 3542, 3268, 1479, 054, 285, 285, 397, 339, 614, 911, 967, 693, 612, 358, 124, 379, 286, 250, 197, 080, 374, 386, 284, 997, 585, 386, 125, 664]
    , V.fromList [4820, 1591, 3617, 1681, 1169, 6384, 6051, 5358, 4993, 937, 3701, 4277, 3001, 2736, 4569, 4287, 6746, 5903, 6617, 4455, 3136, 4211, 3340, 272, 507, 363, 509, 121, 501, 179, 763, 187, 787, 718, 001, 772, 583, 518, 012, 392, 386, 314, 837, 205, 095, 680, 169]
    , V.fromList [3489, 7027, 3891, 7987, 5313, 550, 1219, 3632, 3039, 6795, 2923, 2403, 3403, 3915, 2405, 4390, 437, 1322, 486, 1923, 3189, 3969, 3423, 022, 935, 667, 87, 55, 831, 00, 115, 339, 926, 565, 738, 121, 70, 658, 324, 943, 284, 314, 676, 603, 964, 662, 184]
    , V.fromList [1947, 6186, 2686, 7502, 4706, 1224, 482, 1987, 1486, 6507, 2137, 1564, 2860, 3138, 1289, 2928, 1948, 355, 1501, 1641, 3029, 2553, 2541, 892, 331, 190, 581, 43, 994, 277, 40, 265, 086, 548, 556, 00, 380, 002, 046, 659, 997, 837, 676, 521, 44, 325, 670]
    , V.fromList [6835, 3472, 5661, 1877, 3241, 7805, 7635, 7391, 6934, 1268, 5459, 5983, 4697, 4647, 6338, 6419, 8005, 7508, 7989, 5957, 4527, 6290, 213, 629, 312, 798, 844, 644, 704, 567, 537, 296, 436, 830, 61, 322, 986, 395, 478, 285, 585, 205, 603, 521, 805, 208, 102]
    , V.fromList [1542, 5461, 2023, 6758, 3962, 1670, 1054, 1785, 1112, 5773, 1394, 827, 2126, 2395, 555, 2428, 2334, 887, 1962, 1071, 2355, 2012, 1801, 178, 589, 446, 974, 231, 264, 609, 63, 576, 22, 839, 829, 02, 866, 51, 328, 012, 386, 095, 964, 44, 805, 644, 928]
    , V.fromList [2379, 4390, 1867, 5360, 2651, 2704, 2432, 2879, 2196, 4249, 711, 892, 756, 1351, 1297, 2749, 3098, 2302, 2939, 777, 711, 2336, 1077, 581, 284, 041, 838, 465, 209, 501, 404, 941, 244, 140, 267, 128, 904, 429, 755, 563, 125, 680, 662, 325, 208, 644, 532]
    , V.fromList [3744, 2088, 2560, 2844, 304, 5230, 4884, 4296, 3876, 1914, 2534, 3109, 1836, 1592, 3406, 3337, 5618, 4736, 5469, 3302, 2042, 3189, 2190, 639, 340, 528, 369, 957, 196, 032, 603, 381, 619, 751, 013, 608, 432, 380, 000, 254, 664, 169, 184, 670, 102, 928, 532]
    ]
