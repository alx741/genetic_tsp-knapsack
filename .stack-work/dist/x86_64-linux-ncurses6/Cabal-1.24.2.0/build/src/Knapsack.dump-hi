
==================== FINAL INTERFACE ====================
2017-06-24 23:59:03.510959881 UTC

interface genetic-0.1.0.0-4Qteo4SiaPs2YiyYDVTgEQ:Knapsack 8002
  interface hash: 845086f7c66cb82a85043b6bdd50b61c
  ABI hash: 8244b6b09344048c8598ba1668a9d17e
  export-list hash: 44b7a7bd57412988fbf221f6f0c3d853
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 058db390066a9489e337def69fb71e13
  sig of: Nothing
  used TH splices: False
  where
exports:
  Knapsack.elements
  Knapsack.knapsackIsUnderFilled
  Knapsack.knapsackRndGenome
  Knapsack.knapsackSize
  Knapsack.knapsackSwap
  Knapsack.knapsackTotalValue
  Knapsack.Element{Knapsack.Element elemId selected value weight}
  Knapsack.ElementId{Knapsack.ElementId}
module dependencies: Genetic
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
import  -/  MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Random 1ac23f2f24d80161face0842d1be3259
import  -/  MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Random.Class 474032a918a745ee5c3722124fede5bc
import  -/  MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy a192332894fd19b0ac7067ae44e7b605
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:Debug.Trace a9edf3aec504f4423d8ba829ab373a25
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.ParserCombinators.ReadPrec 5a182a8d6deb0f7d67aed5fab08a5cc0
import  -/  base-4.9.1.0:Text.Read.Lex 16199fac3c6c2d64cc7c268f3c0d2269
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set 3ed2324fd1e757464a8ac2b636a64e5a
import  -/  Genetic 191c5ed62dd83d3f537239e1c624156f
  exports: 1e12448d273999ab3c46da27b0f6aae0
  Gene 051d87aceeb5984757c3afe47dd60fc9
  Genome 09166c24f3d828e3df12b3d9bdb1a675
  disturb 2f2965f61da5dd1f6a3349bdaf31aa26
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random 08e50ea8c400b4b56120dee22f012f01
import  -/  vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector 5a746e9670329619c461c982b12cd97b
8eaf5ea01c839f56babce39731a595cc
  $fEqElement :: GHC.Classes.Eq Knapsack.Element
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.Element
                  Knapsack.$fEqElement_$c==
                  Knapsack.$fEqElement_$c/= -}
a3fc6992454f2ec9e8e6751121a768ce
  $fEqElementId :: GHC.Classes.Eq Knapsack.ElementId
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.ElementId
                  Knapsack.$fEqElementId_$c==
                  Knapsack.$fEqElementId_$c/= -}
a3fc6992454f2ec9e8e6751121a768ce
  $fEqElementId_$c/= ::
    Knapsack.ElementId -> Knapsack.ElementId -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.neInt
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R <GHC.Types.Bool>_R) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fEqElementId_$c== ::
    Knapsack.ElementId -> Knapsack.ElementId -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.eqInt
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R <GHC.Types.Bool>_R) -}
8eaf5ea01c839f56babce39731a595cc
  $fEqElement_$c/= ::
    Knapsack.Element -> Knapsack.Element -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Knapsack.Element) (y :: Knapsack.Element) ->
                 GHC.Classes.not (Knapsack.$fEqElement_$c== x y)) -}
8eaf5ea01c839f56babce39731a595cc
  $fEqElement_$c== ::
    Knapsack.Element -> Knapsack.Element -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(1*U(U),A,A,A)><S(S(S)LLL),1*U(1*U(U),A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (e1 :: Knapsack.Element) (e2 :: Knapsack.Element) ->
                 case e1 of wild { Knapsack.Element ds ds1 ds2 ds3 ->
                 case e2 of wild1 { Knapsack.Element ds4 ds5 ds6 ds7 ->
                 GHC.Classes.eqInt
                   ds `cast` (Knapsack.N:ElementId[0])
                   ds4 `cast` (Knapsack.N:ElementId[0]) } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fGeneElement :: Genetic.Gene Knapsack.Element
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.Element
                  Knapsack.knapsackSwap
                  Knapsack.knapsackTotalValue
                  Knapsack.knapsackIsUnderFilled
                  Knapsack.$fGeneElement_$crndGenome -}
8eaf5ea01c839f56babce39731a595cc
  $fGeneElement_$crndGenome ::
    System.Random.RandomGen g =>
    Control.Monad.Trans.Random.Lazy.Rand
      g (Genetic.Genome Knapsack.Element)
  {- Arity: 1, Strictness: <L,U(C(U(1*U(U),U)),C(U(U,U)),A)>,
     Unfolding: InlineRule (0, True, True) Knapsack.knapsackRndGenome -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement :: GHC.Classes.Ord Knapsack.Element
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.Element
                  Knapsack.$fEqElement
                  Knapsack.$fOrdElement_$ccompare
                  Knapsack.$fOrdElement_$c<
                  Knapsack.$fOrdElement_$c<=
                  Knapsack.$fOrdElement_$c>
                  Knapsack.$fOrdElement_$c>=
                  Knapsack.$fOrdElement_$cmax
                  Knapsack.$fOrdElement_$cmin -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId :: GHC.Classes.Ord Knapsack.ElementId
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.ElementId
                  Knapsack.$fEqElementId
                  Knapsack.$fOrdElementId_$ccompare
                  Knapsack.$fOrdElementId_$c<
                  Knapsack.$fOrdElementId_$c<=
                  Knapsack.$fOrdElementId_$c>
                  Knapsack.$fOrdElementId_$c>=
                  Knapsack.$fOrdElementId_$cmax
                  Knapsack.$fOrdElementId_$cmin -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId_$c< ::
    Knapsack.ElementId -> Knapsack.ElementId -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.ltInt
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R <GHC.Types.Bool>_R) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId_$c<= ::
    Knapsack.ElementId -> Knapsack.ElementId -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.leInt
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R <GHC.Types.Bool>_R) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId_$c> ::
    Knapsack.ElementId -> Knapsack.ElementId -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.gtInt
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R <GHC.Types.Bool>_R) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId_$c>= ::
    Knapsack.ElementId -> Knapsack.ElementId -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.geInt
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R <GHC.Types.Bool>_R) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId_$ccompare ::
    Knapsack.ElementId -> Knapsack.ElementId -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.compareInt
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R <GHC.Types.Ordering>_R) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId_$cmax ::
    Knapsack.ElementId -> Knapsack.ElementId -> Knapsack.ElementId
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fOrdInt_$cmax
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fOrdElementId_$cmin ::
    Knapsack.ElementId -> Knapsack.ElementId -> Knapsack.ElementId
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fOrdInt_$cmin
                  `cast`
                (Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])
                 ->_R Sym (Knapsack.N:ElementId[0])) -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement_$c< ::
    Knapsack.Element -> Knapsack.Element -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))><S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Knapsack.Element) (w1 :: Knapsack.Element) ->
                 case w of ww { Knapsack.Element ww1 ww2 ww3 ww4 ->
                 case ww1
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww5 { GHC.Types.I# ww6 ->
                 case w1 of ww7 { Knapsack.Element ww8 ww9 ww10 ww11 ->
                 case ww8
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww12 { GHC.Types.I# ww13 ->
                 Knapsack.$w$c< ww6 ww4 ww13 ww11 } } } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement_$c<= ::
    Knapsack.Element -> Knapsack.Element -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLS(S)),1*U(A,A,A,1*U(U))><S(LLLS(S)),1*U(A,A,A,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (e1 :: Knapsack.Element) (e2 :: Knapsack.Element) ->
                 case e1 of wild { Knapsack.Element ds ds1 ds2 ds3 ->
                 case e2 of wild1 { Knapsack.Element ds4 ds5 ds6 ds7 ->
                 GHC.Classes.leInt ds3 ds7 } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement_$c> ::
    Knapsack.Element -> Knapsack.Element -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))><S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Knapsack.Element) (w1 :: Knapsack.Element) ->
                 case w of ww { Knapsack.Element ww1 ww2 ww3 ww4 ->
                 case ww1
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww5 { GHC.Types.I# ww6 ->
                 case w1 of ww7 { Knapsack.Element ww8 ww9 ww10 ww11 ->
                 case ww8
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww12 { GHC.Types.I# ww13 ->
                 Knapsack.$w$c> ww6 ww4 ww13 ww11 } } } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement_$c>= ::
    Knapsack.Element -> Knapsack.Element -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))><S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Knapsack.Element) (w1 :: Knapsack.Element) ->
                 case w of ww { Knapsack.Element ww1 ww2 ww3 ww4 ->
                 case ww1
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww5 { GHC.Types.I# ww6 ->
                 case w1 of ww7 { Knapsack.Element ww8 ww9 ww10 ww11 ->
                 case ww8
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww12 { GHC.Types.I# ww13 ->
                 Knapsack.$w$c>= ww6 ww4 ww13 ww11 } } } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement_$ccompare ::
    Knapsack.Element -> Knapsack.Element -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))><S(S(S)LLL),1*U(1*U(U),A,A,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Knapsack.Element) (w1 :: Knapsack.Element) ->
                 case w of ww { Knapsack.Element ww1 ww2 ww3 ww4 ->
                 case ww1
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww5 { GHC.Types.I# ww6 ->
                 case w1 of ww7 { Knapsack.Element ww8 ww9 ww10 ww11 ->
                 case ww8
                        `cast`
                      (Knapsack.N:ElementId[0]) of ww12 { GHC.Types.I# ww13 ->
                 Knapsack.$w$ccompare ww6 ww4 ww13 ww11 } } } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement_$cmax ::
    Knapsack.Element -> Knapsack.Element -> Knapsack.Element
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLS(S)),1*U(U,U,U,U(U))><S(LLLS(S)),1*U(U,U,U,U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Knapsack.Element) (y :: Knapsack.Element) ->
                 case x of wild { Knapsack.Element ds ds1 ds2 ds3 ->
                 case y of wild1 { Knapsack.Element ds4 ds5 ds6 ds7 ->
                 case ds3 of wild2 { GHC.Types.I# x1 ->
                 case ds7 of wild3 { GHC.Types.I# y1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x1 y1) of wild4 {
                   GHC.Types.False -> wild GHC.Types.True -> wild1 } } } } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fOrdElement_$cmin ::
    Knapsack.Element -> Knapsack.Element -> Knapsack.Element
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLS(S)),1*U(U,U,U,U(U))><S(LLLS(S)),1*U(U,U,U,U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Knapsack.Element) (y :: Knapsack.Element) ->
                 case x of wild { Knapsack.Element ds ds1 ds2 ds3 ->
                 case y of wild1 { Knapsack.Element ds4 ds5 ds6 ds7 ->
                 case ds3 of wild2 { GHC.Types.I# x1 ->
                 case ds7 of wild3 { GHC.Types.I# y1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x1 y1) of wild4 {
                   GHC.Types.False -> wild1 GHC.Types.True -> wild } } } } }) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement :: GHC.Read.Read Knapsack.Element
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.Element
                  Knapsack.$fReadElement_$creadsPrec
                  Knapsack.$fReadElement_$creadList
                  Knapsack.$fReadElement_$creadPrec
                  Knapsack.$fReadElement_$creadListPrec -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Knapsack.Element] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Knapsack.Element] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ Knapsack.Element
                   Knapsack.$fReadElement2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Knapsack.Element>_R))
                   eta
                   @ b
                   eta1) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Knapsack.Element
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ Knapsack.Element
                   Knapsack.$fReadElement3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Knapsack.Element>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Knapsack.Element>_R)))) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Knapsack.Element -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Knapsack.Element -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Knapsack.$w$creadPrec ww1 @ b w1 }) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement4 :: Text.ParserCombinators.ReadP.P [Knapsack.Element]
  {- Unfolding: (GHC.Read.list1
                   @ Knapsack.Element
                   Knapsack.$fReadElement2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Knapsack.Element>_R))
                   GHC.Read.$fRead()5
                   @ [Knapsack.Element]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Knapsack.Element])) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId :: GHC.Read.Read Knapsack.ElementId
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.ElementId
                  Knapsack.$fReadElementId_$creadsPrec
                  Knapsack.$fReadElementId_$creadList
                  Knapsack.$fReadElementId_$creadPrec
                  Knapsack.$fReadElementId_$creadListPrec -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Knapsack.ElementId] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Knapsack.ElementId]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ Knapsack.ElementId
                   Knapsack.$fReadElementId2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Knapsack.ElementId>_R))
                   eta
                   @ b
                   eta1) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Knapsack.ElementId
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ Knapsack.ElementId
                   Knapsack.$fReadElementId3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Knapsack.ElementId>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Knapsack.ElementId>_R)))) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Knapsack.ElementId -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Knapsack.ElementId -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Knapsack.$w$creadPrec1 ww1 @ b w1 }) -}
448175cf07fea06a45550655cb5a09de
  $fReadElementId4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ElementId"#) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId5 ::
    Text.ParserCombinators.ReadP.P [Knapsack.ElementId]
  {- Unfolding: (GHC.Read.list1
                   @ Knapsack.ElementId
                   Knapsack.$fReadElementId2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Knapsack.ElementId>_R))
                   GHC.Read.$fRead()5
                   @ [Knapsack.ElementId]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Knapsack.ElementId])) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Knapsack.ElementId]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Knapsack.ElementId]
                   Knapsack.$fReadElementId5) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Knapsack.ElementId]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Knapsack.$fReadElementId1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Knapsack.ElementId]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Knapsack.ElementId]>_R))) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Knapsack.ElementId
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Knapsack.$fReadElementId2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Knapsack.ElementId>_R)) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fReadElementId_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Knapsack.ElementId
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Knapsack.ElementId
                   ((GHC.Read.parens1
                       @ Knapsack.ElementId
                       Knapsack.$fReadElementId3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Knapsack.ElementId>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Knapsack.ElementId>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Knapsack.ElementId>_R)
                      @ Knapsack.ElementId
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Knapsack.ElementId))) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Knapsack.Element]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Knapsack.Element]
                   Knapsack.$fReadElement4) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Knapsack.Element]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Knapsack.$fReadElement1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Knapsack.Element]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Knapsack.Element]>_R))) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Knapsack.Element
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Knapsack.$fReadElement2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Knapsack.Element>_R)) -}
8eaf5ea01c839f56babce39731a595cc
  $fReadElement_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Knapsack.Element
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Knapsack.Element
                   ((GHC.Read.parens1
                       @ Knapsack.Element
                       Knapsack.$fReadElement3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Knapsack.Element>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Knapsack.Element>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Knapsack.Element>_R)
                      @ Knapsack.Element
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Knapsack.Element))) -}
8eaf5ea01c839f56babce39731a595cc
  $fShowElement :: GHC.Show.Show Knapsack.Element
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.Element
                  Knapsack.$fShowElement_$cshowsPrec
                  Knapsack.$fShowElement_$cshow
                  Knapsack.$fShowElement_$cshowList -}
8eaf5ea01c839f56babce39731a595cc
  $fShowElement1 ::
    Knapsack.Element -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Knapsack.Element)
                   (s :: GHC.Base.String)[OneShot] ->
                 case x of ww { Knapsack.Element ww1 ww2 ww3 ww4 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Knapsack.$w$cshow ww1 ww2 ww3 ww4)
                   s }) -}
7921e317e1755c43d4c20a73b07e9087
  $fShowElement2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
553f9feee62ac3c1a273a155c2798a7a
  $fShowElement3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ElementId "#) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fShowElementId :: GHC.Show.Show Knapsack.ElementId
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Knapsack.ElementId
                  Knapsack.$fShowElementId_$cshowsPrec
                  Knapsack.$fShowElementId_$cshow
                  Knapsack.$fShowElementId_$cshowList -}
a3fc6992454f2ec9e8e6751121a768ce
  $fShowElementId1 :: Knapsack.ElementId -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Knapsack.ElementId) (w1 :: GHC.Base.String) ->
                 Knapsack.$w$cshowsPrec 0# w w1) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fShowElementId_$cshow :: Knapsack.ElementId -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: (\ (x :: Knapsack.ElementId) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Knapsack.$fShowElement3
                   (case x `cast`
                         (Knapsack.N:ElementId[0]) of ww2 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           11#
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fShowElementId_$cshowList ::
    [Knapsack.ElementId] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Knapsack.ElementId
                   Knapsack.$fShowElementId1) -}
a3fc6992454f2ec9e8e6751121a768ce
  $fShowElementId_$cshowsPrec ::
    GHC.Types.Int -> Knapsack.ElementId -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Knapsack.ElementId)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Knapsack.$w$cshowsPrec ww1 w1 w2 }) -}
8eaf5ea01c839f56babce39731a595cc
  $fShowElement_$cshow :: Knapsack.Element -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Knapsack.Element) ->
                 case w of ww { Knapsack.Element ww1 ww2 ww3 ww4 ->
                 Knapsack.$w$cshow ww1 ww2 ww3 ww4 }) -}
8eaf5ea01c839f56babce39731a595cc
  $fShowElement_$cshowList :: [Knapsack.Element] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Knapsack.Element]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Knapsack.Element
                   Knapsack.$fShowElement1
                   ls
                   s) -}
8eaf5ea01c839f56babce39731a595cc
  $fShowElement_$cshowsPrec ::
    GHC.Types.Int -> Knapsack.Element -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,A><S,1*U(1*U(U),1*U,1*U(U),1*U(U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Knapsack.Element)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Knapsack.$fShowElement_$cshow x))
                   s) -}
8ebedcbdffe035ec505bb96d663c1789
  $tc'Element :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10791310753343214878##
                   12842888992796330852##
                   Knapsack.$trModule
                   Knapsack.$tc'Element1) -}
a923b75d9d5f683837a6de240d478555
  $tc'Element1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Element"#) -}
75715c3bc5da6702f333ef21f4bad1d9
  $tc'ElementId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2435340738365608631##
                   15704332880717216026##
                   Knapsack.$trModule
                   Knapsack.$tc'ElementId1) -}
785f97de1d6c96a8888bb21fe7a4aaa8
  $tc'ElementId1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ElementId"#) -}
0f3ee4dacb99a0af7b594b4a9225294c
  $tcElement :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3142982853346193888##
                   4758087634361523299##
                   Knapsack.$trModule
                   Knapsack.$tcElement1) -}
f01ef872b579b2173a6ed5b8eaca33a3
  $tcElement1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Element"#) -}
4cda7e95f253da73d68680443e85ec8c
  $tcElementId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7414305198731928660##
                   10811234659490334356##
                   Knapsack.$trModule
                   Knapsack.$tcElementId1) -}
f863c7261b8124a7f36e933412dd8e2c
  $tcElementId1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ElementId"#) -}
f42514bd1d78334b1fe942f90f4679bd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Knapsack.$trModule2
                   Knapsack.$trModule1) -}
426415b17769dbf5bac1452a14b667a4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Knapsack"#) -}
a3f8aaec7b3e20520bd466dba7145fb0
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "genetic-0.1.0.0-4Qteo4SiaPs2YiyYDVTgEQ"#) -}
38e763a51be252f11e6c354124db84bf
  $w$c< ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww2) of wild {
                   GHC.Types.False -> GHC.Classes.leInt ww1 ww3
                   GHC.Types.True -> GHC.Types.False }) -}
71db66a08ed37f703d069479ec002332
  $w$c> ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww2) of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 { GHC.Types.I# x ->
                      case ww3 of wild2 { GHC.Types.I# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x y) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } }
                   GHC.Types.True -> GHC.Types.False }) -}
4b734e2792fa3b8ec50f725708d3a564
  $w$c>= ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww2) of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 { GHC.Types.I# x ->
                      case ww3 of wild2 { GHC.Types.I# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x y) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } }
                   GHC.Types.True -> GHC.Types.True }) -}
648a1d4f8da7c4f51bcaa1c32c2c0bae
  $w$ccompare ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww2) of wild {
                   GHC.Types.False
                   -> case ww1 of wild1 { GHC.Types.I# x ->
                      case ww3 of wild2 { GHC.Types.I# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x y) of wild3 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Types.LT } } }
                   GHC.Types.True -> GHC.Types.EQ }) -}
8eaf5ea01c839f56babce39731a595cc
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Knapsack.Element -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
a3fc6992454f2ec9e8e6751121a768ce
  $w$creadPrec1 ::
    GHC.Prim.Int#
    -> forall b.
       (Knapsack.ElementId -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Knapsack.ElementId -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww 10#) of wild2 {
                   GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                   GHC.Types.True
                   -> let {
                        lvl81 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl82 :: Text.ParserCombinators.ReadP.P b
                            = GHC.Read.$fReadInt3
                                GHC.Read.$fReadInt_$sconvertInt
                                Knapsack.elements32
                                @ b
                                (\ (a1 :: GHC.Types.Int) ->
                                 w a1 `cast` (Sym (Knapsack.N:ElementId[0])))
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a1 :: Text.Read.Lex.Lexeme) ->
                             case a1 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a2
                               -> case GHC.Base.eqString a2 Knapsack.$fReadElementId4 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl82 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                             Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                        = \ (w4 :: ()) -> lvl81
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                           `cast`
                         (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                           @ b
                           k) }) -}
819d1874f3d66bcb804465b7c46c1a13
  $w$cshow ::
    Knapsack.ElementId
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Knapsack.ElementId)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Int) ->
                 GHC.CString.unpackAppendCString#
                   "Element:\n\
                   \\tId: "#
                   (GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Base.++
                         @ GHC.Types.Char
                         Knapsack.$fShowElement3
                         (case ww
                                 `cast`
                               (Knapsack.N:ElementId[0]) of ww4 { GHC.Types.I# ww5 ->
                          case GHC.Show.$wshowSignedInt
                                 11#
                                 ww5
                                 (GHC.Types.[] @ GHC.Types.Char) of ww6 { (#,#) ww7 ww8 ->
                          GHC.Types.: @ GHC.Types.Char ww7 ww8 } }))
                      (GHC.CString.unpackAppendCString#
                         "\n\
                         \\tSelected: "#
                         (let {
                            arg :: [GHC.Types.Char]
                            = GHC.CString.unpackAppendCString#
                                "\n\
                                \\tWeight: "#
                                (case ww2 of ww4 { GHC.Types.I# ww5 ->
                                 case GHC.Show.$wshowSignedInt
                                        0#
                                        ww5
                                        (GHC.Types.[] @ GHC.Types.Char) of ww6 { (#,#) ww7 ww8 ->
                                 GHC.Base.++
                                   @ GHC.Types.Char
                                   (GHC.Types.: @ GHC.Types.Char ww7 ww8)
                                   (GHC.CString.unpackAppendCString#
                                      "\n\
                                      \\tValue: "#
                                      (case ww3 of ww9 { GHC.Types.I# ww10 ->
                                       case GHC.Show.$wshowSignedInt
                                              0#
                                              ww10
                                              (GHC.Types.[]
                                                 @ GHC.Types.Char) of ww11 { (#,#) ww12 ww13 ->
                                       GHC.Base.++
                                         @ GHC.Types.Char
                                         (GHC.Types.: @ GHC.Types.Char ww12 ww13)
                                         Knapsack.$fShowElement2 } })) } })
                          } in
                          case ww1 of wild {
                            GHC.Types.False
                            -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows18 arg
                            GHC.Types.True
                            -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows17 arg })))) -}
a3fc6992454f2ec9e8e6751121a768ce
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Knapsack.ElementId -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Knapsack.ElementId)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Knapsack.$fShowElement3
                        (case w `cast`
                              (Knapsack.N:ElementId[0]) of ww2 { GHC.Types.I# ww3 ->
                         case GHC.Show.$wshowSignedInt 11# ww3 w1 of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Knapsack.$fShowElement3
                           (case w `cast`
                                 (Knapsack.N:ElementId[0]) of ww2 { GHC.Types.I# ww3 ->
                            case GHC.Show.$wshowSignedInt
                                   11#
                                   ww3
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.shows4
                                      w1) of ww4 { (#,#) ww5 ww6 ->
                            GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) }) -}
8eaf5ea01c839f56babce39731a595cc
  $wknapsackIsUnderFilled ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Knapsack.Element
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Knapsack.Element) ->
                 letrec {
                   $wfoldlM'_loop :: GHC.Types.SPEC
                                     -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
                     {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0] -}
                   = \ (w :: GHC.Types.SPEC)
                       (ww3 :: GHC.Prim.Int#)
                       (ww4 :: GHC.Prim.Int#) ->
                     case w of ds5 { DEFAULT ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww4 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Knapsack.Element
                                 ww2
                                 (GHC.Prim.+# ww ww4) of ds2 { Unit# ipv ->
                          case ipv of wild1 { Knapsack.Element ds ds1 ds3 ds4 ->
                          case ds1 of wild2 {
                            GHC.Types.False
                            -> $wfoldlM'_loop GHC.Types.SPEC ww3 (GHC.Prim.+# ww4 1#)
                            GHC.Types.True
                            -> case ds3 of wild3 { GHC.Types.I# y ->
                               $wfoldlM'_loop
                                 GHC.Types.SPEC
                                 (GHC.Prim.+# ww3 y)
                                 (GHC.Prim.+# ww4 1#) } } } }
                       GHC.Types.True -> ww3 } }
                 } in
                 case $wfoldlM'_loop GHC.Types.SPEC 0# 0# of ww3 { DEFAULT ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# ww3 50#) }) -}
8eaf5ea01c839f56babce39731a595cc
  $wknapsackTotalValue ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Knapsack.Element
    -> GHC.Prim.Float#
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Knapsack.Element) ->
                 letrec {
                   $wfoldlM'_loop :: GHC.Types.SPEC
                                     -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
                     {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0] -}
                   = \ (w :: GHC.Types.SPEC)
                       (ww3 :: GHC.Prim.Int#)
                       (ww4 :: GHC.Prim.Int#) ->
                     case w of ds5 { DEFAULT ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww4 ww1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ Knapsack.Element
                                 ww2
                                 (GHC.Prim.+# ww ww4) of ds2 { Unit# ipv ->
                          case ipv of wild1 { Knapsack.Element ds ds1 ds3 ds4 ->
                          case ds1 of wild2 {
                            GHC.Types.False
                            -> $wfoldlM'_loop GHC.Types.SPEC ww3 (GHC.Prim.+# ww4 1#)
                            GHC.Types.True
                            -> case ds4 of wild3 { GHC.Types.I# y ->
                               $wfoldlM'_loop
                                 GHC.Types.SPEC
                                 (GHC.Prim.+# ww3 y)
                                 (GHC.Prim.+# ww4 1#) } } } }
                       GHC.Types.True -> ww3 } }
                 } in
                 case $wfoldlM'_loop GHC.Types.SPEC 0# 0# of ww3 { DEFAULT ->
                 GHC.Prim.int2Float# ww3 }) -}
8eaf5ea01c839f56babce39731a595cc
  data Element
    = Element {elemId :: Knapsack.ElementId,
               selected :: GHC.Types.Bool,
               weight :: GHC.Types.Int,
               value :: GHC.Types.Int}
a3fc6992454f2ec9e8e6751121a768ce
  newtype ElementId = ElementId GHC.Types.Int
eed65a0eb4478ce5389f69574d632b4e
  elemId :: Knapsack.Element -> Knapsack.ElementId
  RecSel Left Knapsack.Element
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Knapsack.Element) ->
                 case ds of wild { Knapsack.Element ds1 ds2 ds3 ds4 -> ds1 }) -}
8eaf5ea01c839f56babce39731a595cc
  elements :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements44
                   Knapsack.elements1) -}
8eaf5ea01c839f56babce39731a595cc
  elements1 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements43
                   Knapsack.elements2) -}
8eaf5ea01c839f56babce39731a595cc
  elements10 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements30
                   Knapsack.elements11) -}
8eaf5ea01c839f56babce39731a595cc
  elements11 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements27
                   Knapsack.elements12) -}
8eaf5ea01c839f56babce39731a595cc
  elements12 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements23
                   Knapsack.elements13) -}
8eaf5ea01c839f56babce39731a595cc
  elements13 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements19
                   Knapsack.elements14) -}
8eaf5ea01c839f56babce39731a595cc
  elements14 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements15
                   (GHC.Types.[] @ Knapsack.Element)) -}
8eaf5ea01c839f56babce39731a595cc
  elements15 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements18 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements17
                   Knapsack.elements16) -}
5bac24506051e1670b91473fd316cc3c
  elements16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
82aab80b87057d803143d1d3c4b22b1e
  elements17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
e0b3157c1bf9d49ca7c7b450d72ae9cd
  elements18 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 15#) -}
8eaf5ea01c839f56babce39731a595cc
  elements19 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements22 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements21
                   Knapsack.elements20) -}
8eaf5ea01c839f56babce39731a595cc
  elements2 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements42
                   Knapsack.elements3) -}
96bcfe433fdb36f7f0ffc9207e57763d
  elements20 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
eb89c842d4b6a94a2fe503de20d711c9
  elements21 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
f1524a32c4aed2fc8dcc7046ced88ef0
  elements22 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
8eaf5ea01c839f56babce39731a595cc
  elements23 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements26 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements25
                   Knapsack.elements24) -}
d3bd3b0a508facac039a14f4fa461d69
  elements24 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
498acb760851df7557588b1de8c90d85
  elements25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
eea6db20db3d661a72c7fab04b5169cd
  elements26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 13#) -}
8eaf5ea01c839f56babce39731a595cc
  elements27 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements29 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements28
                   Knapsack.elements21) -}
6c71b40264bdbc90fc79d6c292e5e422
  elements28 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
a32b3f4eb202b6a32c8f1d8bd9d9ab21
  elements29 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 12#) -}
8eaf5ea01c839f56babce39731a595cc
  elements3 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements41
                   Knapsack.elements4) -}
8eaf5ea01c839f56babce39731a595cc
  elements30 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements32 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements24
                   Knapsack.elements31) -}
c5a85581c75b3374da04a476756db6d4
  elements31 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
cb2c32ec20fa3ac81167761243f92b7f
  elements32 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
8eaf5ea01c839f56babce39731a595cc
  elements33 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements34 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements16
                   Knapsack.elements25) -}
962e8fce33b8c9bfcc8d810fe2ad5db8
  elements34 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10#) -}
8eaf5ea01c839f56babce39731a595cc
  elements35 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements20 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements24
                   Knapsack.elements25) -}
8eaf5ea01c839f56babce39731a595cc
  elements36 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements28 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements28
                   Knapsack.elements16) -}
8eaf5ea01c839f56babce39731a595cc
  elements37 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements16 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements20
                   Knapsack.elements25) -}
8eaf5ea01c839f56babce39731a595cc
  elements38 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements17 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements39
                   Knapsack.elements20) -}
66f1bf1de9ef74332ca6da24e3cd6df8
  elements39 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
8eaf5ea01c839f56babce39731a595cc
  elements4 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements40
                   Knapsack.elements5) -}
8eaf5ea01c839f56babce39731a595cc
  elements40 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements39 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements21
                   Knapsack.elements21) -}
8eaf5ea01c839f56babce39731a595cc
  elements41 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements21 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements25
                   Knapsack.elements16) -}
8eaf5ea01c839f56babce39731a595cc
  elements42 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements25 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements31
                   Knapsack.elements24) -}
8eaf5ea01c839f56babce39731a595cc
  elements43 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements31 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements21
                   Knapsack.elements28) -}
8eaf5ea01c839f56babce39731a595cc
  elements44 :: Knapsack.Element
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Knapsack.Element
                   Knapsack.elements24 `cast` (Sym (Knapsack.N:ElementId[0]))
                   GHC.Types.False
                   Knapsack.elements39
                   Knapsack.elements39) -}
8eaf5ea01c839f56babce39731a595cc
  elements5 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements38
                   Knapsack.elements6) -}
8eaf5ea01c839f56babce39731a595cc
  elements6 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements37
                   Knapsack.elements7) -}
8eaf5ea01c839f56babce39731a595cc
  elements7 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements36
                   Knapsack.elements8) -}
8eaf5ea01c839f56babce39731a595cc
  elements8 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements35
                   Knapsack.elements9) -}
8eaf5ea01c839f56babce39731a595cc
  elements9 :: [Knapsack.Element]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Knapsack.Element
                   Knapsack.elements33
                   Knapsack.elements10) -}
8eaf5ea01c839f56babce39731a595cc
  knapsackIsUnderFilled ::
    Genetic.Genome Knapsack.Element -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Genetic.Genome Knapsack.Element) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Knapsack.$wknapsackIsUnderFilled ww1 ww2 ww3 }) -}
8eaf5ea01c839f56babce39731a595cc
  knapsackRndGenome ::
    System.Random.RandomGen g =>
    Control.Monad.Trans.Random.Lazy.Rand
      g (Genetic.Genome Knapsack.Element)
  {- Arity: 1, Strictness: <L,U(C(U(1*U(U),U)),C(U(U,U)),A)>,
     Unfolding: (\ @ g ($dRandomGen :: System.Random.RandomGen g) ->
                 let {
                   eta :: Control.Monad.Trans.Random.Lazy.RandT
                            g Data.Functor.Identity.Identity [Knapsack.Element]
                   = letrec {
                       go :: [Knapsack.Element]
                             -> Control.Monad.Trans.Random.Lazy.RandT
                                  g Data.Functor.Identity.Identity [Knapsack.Element]
                         {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [Knapsack.Element]) ->
                         case ds of wild {
                           []
                           -> (Knapsack.knapsackRndGenome3 @ g)
                                `cast`
                              (Trans
                                   (<g>_R
                                    ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                  <([Knapsack.Element], g)>_R))
                                   (Trans
                                        (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                  <g>_N
                                                  <Data.Functor.Identity.Identity>_R
                                                  <[Knapsack.Element]>_N))
                                        (Sym (Control.Monad.Trans.Random.Lazy.N:RandT[0]) <g>_N <Data.Functor.Identity.Identity>_N <[Knapsack.Element]>_N)))
                           : y ys
                           -> let {
                                lvl18 :: Knapsack.Element
                                = case y of wild1 { Knapsack.Element eid selected1 w v ->
                                  Knapsack.Element eid (GHC.Classes.not selected1) w v }
                              } in
                              let {
                                eta1 :: Control.Monad.Trans.Random.Lazy.RandT
                                          g Data.Functor.Identity.Identity [Knapsack.Element]
                                = go ys
                              } in
                              (\ (eta2 :: g) ->
                               let {
                                 ds1 :: Data.Functor.Identity.Identity (Knapsack.Element, g)
                                 = case System.Random.$wrandomIvalInteger
                                          @ g
                                          @ GHC.Types.Int
                                          $dRandomGen
                                          GHC.Num.$fNumInt
                                          System.Random.getStdRandom4
                                          System.Random.$fRandomBool3
                                          eta2 of ww2 { (#,#) ww3 ww4 ->
                                   case ww3 of wild2 { GHC.Types.I# ds2 ->
                                   case ds2 of ds3 {
                                     DEFAULT
                                     -> (lvl18, ww4)
                                          `cast`
                                        (Sym (Data.Functor.Identity.N:Identity[0]
                                                  <(Knapsack.Element, g)>_R))
                                     0#
                                     -> (y, ww4)
                                          `cast`
                                        (Sym (Data.Functor.Identity.N:Identity[0]
                                                  <(Knapsack.Element, g)>_R)) } } }
                               } in
                               let {
                                 ds3 :: Data.Functor.Identity.Identity ([Knapsack.Element], g)
                                 = eta1
                                     `cast`
                                   (Trans
                                        (Control.Monad.Trans.Random.Lazy.N:RandT[0] <g>_N <Data.Functor.Identity.Identity>_N <[Knapsack.Element]>_N)
                                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                             <g>_N
                                             <Data.Functor.Identity.Identity>_R
                                             <[Knapsack.Element]>_N))
                                     (case ds1
                                             `cast`
                                           (Data.Functor.Identity.N:Identity[0]
                                                <(Knapsack.Element, g)>_R) of wild1 { (,) a1 s' ->
                                      s' })
                               } in
                               (GHC.Types.:
                                  @ Knapsack.Element
                                  (case ds1
                                          `cast`
                                        (Data.Functor.Identity.N:Identity[0]
                                             <(Knapsack.Element, g)>_R) of wild1 { (,) a1 s' ->
                                   a1 })
                                  (case ds3
                                          `cast`
                                        (Data.Functor.Identity.N:Identity[0]
                                             <([Knapsack.Element], g)>_R) of wild1 { (,) x s'' ->
                                   x }),
                                case ds3
                                       `cast`
                                     (Data.Functor.Identity.N:Identity[0]
                                          <([Knapsack.Element], g)>_R) of wild1 { (,) x s'' ->
                                s'' })
                                 `cast`
                               (Sym (Data.Functor.Identity.N:Identity[0]
                                         <([Knapsack.Element], g)>_R)))
                                `cast`
                              (Trans
                                   (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                             <g>_N
                                             <Data.Functor.Identity.Identity>_R
                                             <[Knapsack.Element]>_N))
                                   (Sym (Control.Monad.Trans.Random.Lazy.N:RandT[0]) <g>_N <Data.Functor.Identity.Identity>_N <[Knapsack.Element]>_N)) }
                     } in
                     go Knapsack.elements
                 } in
                 (\ (eta2 :: g) ->
                  let {
                    ds :: Data.Functor.Identity.Identity ([Knapsack.Element], g)
                    = eta
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Random.Lazy.N:RandT[0] <g>_N <Data.Functor.Identity.Identity>_N <[Knapsack.Element]>_N)
                           (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                <g>_N <Data.Functor.Identity.Identity>_R <[Knapsack.Element]>_N))
                        eta2
                  } in
                  (case GHC.Magic.runRW#
                          @ 'GHC.Types.PtrRepLifted
                          @ (Data.Vector.Vector Knapsack.Element)
                          (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                           case GHC.Prim.newArray#
                                  @ Knapsack.Element
                                  @ (Control.Monad.Primitive.PrimState
                                       (GHC.ST.ST GHC.Prim.RealWorld))
                                  0#
                                  (Data.Vector.Mutable.uninitialised @ Knapsack.Element)
                                  s1
                                    `cast`
                                  (GHC.Prim.State#
                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                               <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                           case ds
                                  `cast`
                                (Data.Functor.Identity.N:Identity[0]
                                     <([Knapsack.Element], g)>_R) of wild { (,) a1 s' ->
                           case Knapsack.knapsackRndGenome2
                                  GHC.Types.SPEC
                                  ((Data.Vector.Mutable.MVector
                                      @ (Control.Monad.Primitive.PrimState
                                           (GHC.ST.ST GHC.Prim.RealWorld))
                                      @ Knapsack.Element
                                      0#
                                      0#
                                      ipv1)
                                     `cast`
                                   (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                    (GHC.ST.ST
                                                                                       GHC.Prim.RealWorld)>_N <Knapsack.Element>_N),
                                   Knapsack.knapsackRndGenome1)
                                  a1
                                  ipv
                                    `cast`
                                  (GHC.Prim.State#
                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                           case ipv7 of wild5 { (,) v' n ->
                           case v'
                                  `cast`
                                (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                           (GHC.ST.ST
                                                                              GHC.Prim.RealWorld)>_N <Knapsack.Element>_N) of wild1 { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                           case n of dt5 { GHC.Types.I# dt6 ->
                           case GHC.Prim.unsafeFreezeArray#
                                  @ (Control.Monad.Primitive.PrimState
                                       (GHC.ST.ST GHC.Prim.RealWorld))
                                  @ Knapsack.Element
                                  dt2
                                  ipv6
                                    `cast`
                                  (GHC.Prim.State#
                                     (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                               <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                           (# ipv2
                                `cast`
                              (GHC.Prim.State#
                                 (Control.Monad.Primitive.D:R:PrimStateST[0]
                                      <GHC.Prim.RealWorld>_N))_R,
                              Data.Vector.Vector
                                @ Knapsack.Element
                                dt
                                dt6
                                ipv3 #) } } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                   ipv2 },
                   case ds
                          `cast`
                        (Data.Functor.Identity.N:Identity[0]
                             <([Knapsack.Element], g)>_R) of wild { (,) a1 s' ->
                   s' })
                    `cast`
                  (Sym (Data.Functor.Identity.N:Identity[0]
                            <(Data.Vector.Vector Knapsack.Element, g)>_R)))
                   `cast`
                 (Trans
                      (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                <g>_N
                                <Data.Functor.Identity.Identity>_R
                                <Genetic.Genome Knapsack.Element>_N))
                      (Sym (Control.Monad.Trans.Random.Lazy.N:RandT[0]) <g>_N <Data.Functor.Identity.Identity>_N <Genetic.Genome
                                                                                                                    Knapsack.Element>_N))) -}
02a818a9183283152abf78ba44051dfd
  knapsackRndGenome1 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
8eaf5ea01c839f56babce39731a595cc
  knapsackRndGenome2 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Knapsack.Element,
        GHC.Types.Int)
    -> [Knapsack.Element]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Knapsack.Element,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
8eaf5ea01c839f56babce39731a595cc
  knapsackRndGenome3 :: g -> ([Knapsack.Element], g)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: (\ @ g (eta1 :: g) ->
                 (GHC.Types.[] @ Knapsack.Element, eta1)) -}
ebf0324e0bcb38a5e4179647ad5cfbe0
  knapsackSize :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 50#) -}
8eaf5ea01c839f56babce39731a595cc
  knapsackSwap :: Knapsack.Element -> Knapsack.Element
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,1*U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Knapsack.Element) ->
                 case ds of wild { Knapsack.Element eid selected1 w v ->
                 Knapsack.Element eid (GHC.Classes.not selected1) w v }) -}
8eaf5ea01c839f56babce39731a595cc
  knapsackTotalValue ::
    Genetic.Genome Knapsack.Element -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Genetic.Genome Knapsack.Element) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 case Knapsack.$wknapsackTotalValue ww1 ww2 ww3 of ww4 { DEFAULT ->
                 GHC.Types.F# ww4 } }) -}
dd2613711fdbfa76b6ade4f120a125c6
  selected :: Knapsack.Element -> GHC.Types.Bool
  RecSel Left Knapsack.Element
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Knapsack.Element) ->
                 case ds of wild { Knapsack.Element ds1 ds2 ds3 ds4 -> ds2 }) -}
ae26f500387973bf5442fbe058c6ee34
  value :: Knapsack.Element -> GHC.Types.Int
  RecSel Left Knapsack.Element
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Knapsack.Element) ->
                 case ds of wild { Knapsack.Element ds1 ds2 ds3 ds4 -> ds4 }) -}
0166ad311f1ce0698fd92bceabb03d62
  weight :: Knapsack.Element -> GHC.Types.Int
  RecSel Left Knapsack.Element
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Knapsack.Element) ->
                 case ds of wild { Knapsack.Element ds1 ds2 ds3 ds4 -> ds3 }) -}
instance GHC.Classes.Eq [Knapsack.Element] = Knapsack.$fEqElement
instance GHC.Classes.Eq [Knapsack.ElementId]
  = Knapsack.$fEqElementId
instance Genetic.Gene [Knapsack.Element] = Knapsack.$fGeneElement
instance GHC.Classes.Ord [Knapsack.Element] = Knapsack.$fOrdElement
instance GHC.Classes.Ord [Knapsack.ElementId]
  = Knapsack.$fOrdElementId
instance GHC.Read.Read [Knapsack.Element] = Knapsack.$fReadElement
instance GHC.Read.Read [Knapsack.ElementId]
  = Knapsack.$fReadElementId
instance GHC.Show.Show [Knapsack.Element] = Knapsack.$fShowElement
instance GHC.Show.Show [Knapsack.ElementId]
  = Knapsack.$fShowElementId
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

